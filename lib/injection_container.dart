import 'package:get_it/get_it.dart';
import 'package:play_ground_app/data/database/app_database.dart';
import 'package:play_ground_app/data/respositories/course_shift_respository.dart';
import 'package:play_ground_app/data/respositories/courses_respository.dart';
import 'package:play_ground_app/data/respositories/roll_call_respository.dart';
import 'package:play_ground_app/data/respositories/shifts_repository.dart';
import 'package:play_ground_app/data/respositories/students_repository.dart';
import 'package:play_ground_app/data/services/auth/check_account_name_service.dart';
import 'package:play_ground_app/data/services/auth/check_account_name_service_imp.dart';
import 'package:play_ground_app/data/services/auth/check_otp_service.dart';
import 'package:play_ground_app/data/services/auth/check_otp_service_imp.dart';
import 'package:play_ground_app/data/services/auth/login_service.dart';
import 'package:play_ground_app/data/services/auth/login_service_imp.dart';
import 'package:play_ground_app/data/services/auth/logout_service.dart';
import 'package:play_ground_app/data/services/auth/logout_service_imp.dart';
import 'package:play_ground_app/data/services/auth/reset_password_service.dart';
import 'package:play_ground_app/data/services/auth/reset_password_service_imp.dart';
import 'package:play_ground_app/data/services/auth/send_otp_service.dart';
import 'package:play_ground_app/data/services/auth/send_otp_service_imp.dart';
import 'package:play_ground_app/data/services/jwt/check_jwt_service.dart';
import 'package:play_ground_app/data/services/jwt/check_jwt_service_imp.dart';
import 'package:play_ground_app/data/services/roll_call/roll_call_service.dart';
import 'package:play_ground_app/ui/courses/view_models/courses_view_model.dart';
import 'package:play_ground_app/ui/courses/widgets/course.dart';
import 'package:play_ground_app/ui/courses/widgets/create_course_form.dart';
import 'package:play_ground_app/ui/roll_call/view_models/roll_call_view_model.dart';
import 'package:play_ground_app/ui/roll_call/widgets/roll_call_show.dart';
import 'package:play_ground_app/ui/shifts/view_models/shifts_view_model.dart';
import 'package:play_ground_app/ui/shifts/widgets/shift.dart';
import 'package:play_ground_app/ui/shifts/widgets/shift_create_form.dart';
import 'package:play_ground_app/ui/students/view_model/student_form_view_model.dart';
import 'package:play_ground_app/ui/students/view_model/student_view_model.dart';
import 'package:play_ground_app/ui/students/widgets/student_create_form.dart';
import 'package:play_ground_app/ui/students/widgets/students.dart';
import 'package:play_ground_app/ui/teach_calendar/view_models/teach_calendar_view_model.dart';
import 'package:play_ground_app/ui/teach_calendar/widgets/create_teach_caledar.dart';

final locator = GetIt.instance;

void setUp() {
  locator.registerSingleton<AppDatabase>(AppDatabase());
  locator.registerSingleton<StudentsRepository>(StudentsRepository(appDatabase: locator<AppDatabase>()));
  locator.registerFactory<StudentViewModel>(() => StudentViewModel(studentsRepository: locator<StudentsRepository>()));
  locator.registerFactory<StudentsWidget>(() => StudentsWidget(studentViewModel: locator<StudentViewModel>(),));
  locator.registerFactory<StudentFormViewModel>(() => StudentFormViewModel(studentRepository: locator<StudentsRepository>(),));
  locator.registerFactory<StudentCreateFormWidgets>(() => StudentCreateFormWidgets());
  locator.registerSingleton<CoursesRespository>(CoursesRespository(appDatabase: locator<AppDatabase>()));
  locator.registerFactory<CourseViewModel>(() => CourseViewModel(respository: locator<CoursesRespository>()));
  locator.registerFactory<CoursesWidget>(() => CoursesWidget(courseViewModel: locator<CourseViewModel>(),));
  locator.registerFactory<CreateCourseFormWidget>(() => CreateCourseFormWidget(courseViewModel: locator<CourseViewModel>(),));
  locator.registerSingleton<ShiftsRepository>(ShiftsRepository(appDatabase: locator<AppDatabase>()));
  locator.registerFactory<ShiftViewModel>(() => ShiftViewModel(shiftsRepository: locator<ShiftsRepository>()));
  locator.registerFactory<ShiftCreateFormWidget>(() => ShiftCreateFormWidget());
  locator.registerFactory<ShiftsWidget>(() => ShiftsWidget(shiftViewModel: locator<ShiftViewModel>()));
  locator.registerSingleton(CourseShiftRespository(appDatabase: locator<AppDatabase>()));
  locator.registerFactory<TeachCalendarViewModel>(() => TeachCalendarViewModel(courseShiftRepository: locator<CourseShiftRespository>()));
  locator.registerFactory<CreateTeachCalendarWidget>(() => CreateTeachCalendarWidget(courseViewModel: locator<CourseViewModel>(), shiftViewModel: locator<ShiftViewModel>(), learnCalendarViewModel: locator<TeachCalendarViewModel>()));
  locator.registerSingleton<RollCallRespository>(RollCallRespository(appDatabase: locator<AppDatabase>()));
  locator.registerFactory<RollCallViewModel>(() => RollCallViewModel(rollCallRespository: locator<RollCallRespository>()));
  locator.registerFactory<RollCallService>(() => RollCallService(rollCallRespository: locator<RollCallRespository>(), studentsRepository: locator<StudentsRepository>()));
  locator.registerFactory<RollCallShow>(() => RollCallShow(teachCalendarViewModel: locator<TeachCalendarViewModel>(),));
  locator.registerFactory<CheckJwtService>(() => CheckJwtServiceImp());
  locator.registerFactory<LoginService>(() => LoginServiceImp());
  locator.registerFactory<LogoutService>(() => LogoutServiceImp());
  locator.registerFactory<CheckAccountNameService>(() => CheckAccountNameServiceImp());
  locator.registerFactory<SendOtpService>(() => SendOtpServiceImp());
  locator.registerFactory<CheckOtpService>(() => CheckOtpServiceImp());
  locator.registerFactory<ResetPasswordService>(() => ResetPasswordServiceImp());
}